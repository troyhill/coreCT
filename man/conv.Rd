% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/conv.R
\name{conv}
\alias{conv}
\title{Convert Hounsfield Units to material classes}
\usage{
conv(mat.list, upperLim = 3045, lowerLim = -1024, 
pixelA, thickness = 0.625, # all in mm 
airHU = -850.3233, 
SiHU = 271.7827, glassHU = 1345.0696,
waterHU = 63.912, waterSD = 14.1728,
densities = c(0.0012, 1, 1.23, 2.2))
}
\arguments{
\item{mat.list}{list of DICOM images for a sediment core}

\item{upperLim}{upper bound cutoff for pixels (Hounsfield Units)}

\item{lowerLim}{lower bound cutoff for pixels (Hounsfield Units)}

\item{pixelA}{pixel area (mm2)}

\item{thickness}{CT image thickness (mm)}

\item{airHU}{mean value for air-filled calibration rod (Hounsfield Units)}

\item{SiHU}{mean value for colloidal silica calibration rod (Hounsfield Units)}

\item{glassHU}{mean value for glass calibration rod (Hounsfield Units)}

\item{waterHU}{mean value for water-filled calibration rod (Hounsfield Units)}

\item{waterSD}{standard deviation for water-filled calibration rod (Hounsfield Units)}

\item{densities}{numeric vector of known cal rod densities. Format must be c(air, water, Si, glass)}
}
\value{
value \code{conv} returns a dataframe with one row per CT slice. Values returned are the area and volume of 7 material classes: gas, peat, roots and rhizomes, rock and shell, fine mineral particles, sand, and water.
}
\description{
Calculates the area and volume of material classes for each CT slice
}
\details{
Calculates the area and volume of material classes for each CT slice
}
\examples{
### Not run:
\dontrun{
data(core_426)
ct.slope <- unique(extractHeader(core_426$hdr, "RescaleSlope"))
ct.int   <- unique(extractHeader(core_426$hdr, "RescaleIntercept")) 
# convert raw units to Hounsfield units
HU_426 <- lapply(core_426$img, function(x) x*ct.slope + ct.int)

materials <- conv(HU_426, pixelA = 0.244141^2)

# plot using "ggplot" package after transforming with "reshape2" package
mass.long <- melt(materials, id.vars = c("depth"), measure.vars = grep(".g", names(materials)))
ggplot(data = mass.long, aes(y = -depth, x = value, color = variable)) + 
geom_point() + theme_classic() + xlab("mass per section (g)")
}

}
\seealso{
\code{\link{rootSize}} operates similarly.
}

